{"version":3,"sources":["images/preloader.gif","api.js","redux/actions.js","components/index.js","components/default_c.js","components/hidden.js","components/textarea.js","components/date_list.js","components/date.js","components/select.js","components/text.js","Page/helpList.js","Page/element.js","Page/group.js","components/deleteItem.js","components/addItem.js","components/contollers.js","Page/renderPage.js","Page/form.js","App.js","serviceWorker.js","redux/reducers.js","redux/initialState.js","index.js"],"names":["module","exports","APIURL","paramsUrl","document","querySelector","undefined","dataProjectId","getAttribute","api","url","connect","component_","state","newState","Object","keys","forEach","key","whithoutType","dispatch","setRedux","assign","type","actions","clearObject","getClearObject","step","fetch","method","then","res","json","clone","data","filter","item","fetchData","before","saveData","objectTosend","body","getRefElement","apiPageData","path","uiValue","getValue","value","i","length","setClasses","defaultClasses","isActiveClasses","classNames","push","map","className","join","isError","validation","outSideValue","isErr","props","label","Fragment","valueInput","TextField","onChange","changeValue","required","rows","variant","multiline","Input","name","hidden","options","error","Select","entries","index","MenuItem","readOnly","onFocus","focusCount","onClick","addItem","model","Element","e","setState","addModel","addModelToRedux","toReduxValue","el","parseInt","cost","stateValue","id","helpList","newReduxValues","formData","FormData","dataApi","apiPage","target","dependence","goSend","keyGroup","dataValue","append","dependenceValues","apiRes","fields","distributors","setDependeces","products","result","toUpperCase","current","complete","removeToRedux","callBackCost","def","countValueToRedux","old","replace","currentPrice","this","typeError","element","errorType","filtItem","class","indexEl","React","Component","title","indexGroup","DeleteItem","removeElementAds","deleteStateToRedux","addStateToRedux","newPath","AddItem","addingItem","newItem","object","splice","duplicate","Controllers","RenderPages","changePage","classItem","page","sendObject","JSON","stringify","isSaveProgress","classList","contains","isLoad","errors","console","log","indexes","src","preloaders","alt","Form","empty","status","App","Boolean","window","location","hostname","match","initialState","resposneServer","sendData","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.09b17201.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/preloader.13f1441c.gif\";","import { connect } from 'react-redux';\r\nimport * as actions from './redux/actions';\r\nimport clone from 'clone';\r\nconst whithoutType = (state) => {\r\n  let newState = {};\r\n  Object.keys(state).forEach((key) => {\r\n    if (key !== 'type') {\r\n      newState[key] = state[key];\r\n    }\r\n  })\r\n  return newState;\r\n}\r\nconst APIURL = 'http://192.168.0.251:8086/local/form/ajax_update_form.php?page=';\r\nconst APIURL_EMPTY = 'http://192.168.0.251:8086/local/form/ajax_update_form.php?method=get_empty&page=';\r\nconst paramsUrl = document.querySelector('.local_form_properties') ? document.querySelector('.local_form_properties') : undefined;\r\nlet dataUrl = paramsUrl ? paramsUrl.getAttribute('data-url') : undefined;\r\nlet dataProjectId = paramsUrl ? paramsUrl.getAttribute('data-project_id-url') : undefined;\r\nconst api = {\r\n  url: APIURL,\r\n  connect: (component_) => {\r\n    return connect(\r\n      (state) => (whithoutType(state)),\r\n      (dispatch) => ({\r\n        setRedux: (state) => dispatch(actions.setRedux(state))\r\n      }))(component_);\r\n  },\r\n  clearObject: {},\r\n  getClearObject: ((step) => {\r\n    return fetch(`${APIURL_EMPTY + step}`, {\r\n      method: 'GET'\r\n    })\r\n      .then(res => res.json())\r\n      .then(res => api.clearObject = clone(res.data.filter((item) => item.type !== 'hidden')))\r\n  }),\r\n  fetchData: (step = 0, before = () => { }) => {\r\n    (typeof before === 'function') && before();\r\n    return fetch(!paramsUrl ?`${APIURL + step}` : `${APIURL + step}?method=get&project_id=${dataProjectId}`, {\r\n      method: 'GET'\r\n    })\r\n      .then(res => res.json())\r\n  },\r\n  saveData: (objectTosend) => {\r\n    return fetch(`${APIURL}`, {\r\n      method: 'POST',\r\n      body: objectTosend\r\n    })\r\n      .then(res => res.json())\r\n  },\r\n  getRefElement: (apiPageData = {}, path = [], uiValue) => {\r\n    const getValue = (value) => {\r\n      for (let i = 0; i < path.length; i++) {\r\n        value = value.data[path[i]];\r\n      }\r\n      return value.data.value = uiValue;\r\n    }\r\n    getValue(apiPageData);\r\n  },\r\n  setClasses: (defaultClasses = false, isActiveClasses = false) => {\r\n    //defaultClasses = ['className']\r\n    //isActiveClasses = { className: 'condition' }\r\n    let classNames = [],\r\n      className = '';\r\n    //handling defaultClasses\r\n    if (defaultClasses) {\r\n      classNames = defaultClasses;\r\n    }\r\n\r\n    //handling active classes\r\n    if (isActiveClasses) {\r\n      classNames.push(...Object.keys(isActiveClasses)\r\n        .map((className) => (isActiveClasses[className] && className))\r\n        .filter((className) => (className)));\r\n    }\r\n\r\n    //joining classes\r\n    className = classNames.join(' ');\r\n\r\n    return className;\r\n  },\r\n  isError: false,\r\n  validation: (outSideValue, isErr) => {\r\n      if (isErr) {\r\n        return outSideValue ? '' : 'error_empty';\r\n      }\r\n  } \r\n};\r\n\r\nexport default api;","export const setRedux = (state = {}) => {\r\n    return (Object.assign({ type: 'redux' }, state))\r\n};","import default_c from './default_c';\r\nimport hidden from './hidden';\r\nimport textarea from './textarea';\r\nimport date_list from './date_list';\r\nimport date from './date';\r\nimport select from './select';\r\nimport text from './text';\r\n\r\nexport default {\r\n    default_c,\r\n    hidden,\r\n    textarea,\r\n    date_list,\r\n    date,\r\n    select,\r\n    text\r\n}","import React from 'react';\r\n\r\nexport default (props) => (<p> {`${props.type} is not supporting`} </p>);","import React from 'react';\r\n\r\nexport default (props) => (\r\n    <div className=\"hidden dispaly_none\">\r\n        <p className=\"form_label\">{props.label}</p>\r\n    </div>\r\n);","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport api from '../api';\r\nexport default (props) => (\r\n  <React.Fragment>\r\n    <p className={`form_label ${api.validation(props.valueInput || props.value, props.isError)}`}>{props.label}</p>\r\n    <TextField\r\n      onChange={props.changeValue}\r\n      required={props.required ? true : false}\r\n      value={props.valueInput}\r\n      rows={5}\r\n      variant=\"filled\"\r\n      className={`full_width input_margin ${api.validation(props.valueInput || props.value, props.isError)}`}\r\n      multiline={true} />\r\n  </React.Fragment>\r\n);","import React from 'react';\r\nimport { Input } from '@material-ui/core';\r\nimport api from '../api';\r\nexport default (props) => (\r\n    <React.Fragment>\r\n        <p className={`form_label ${api.validation(props.valueInput || props.value, props.isError)}`}>{props.label}</p>\r\n        <Input\r\n            onChange={props.changeValue}\r\n            name={props.name}\r\n            type=\"date\"\r\n            value={props.valueInput}\r\n            required={props.required ? true : false}\r\n            className={`full_width input_margin ${api.validation(props.valueInput || props.value, props.isError)}`}\r\n        />\r\n    </React.Fragment>\r\n)","import React from 'react';\r\nimport { Input } from '@material-ui/core';\r\nimport api from '../api';\r\n\r\nexport default (props) => (\r\n    <React.Fragment>\r\n        <p className={`form_label ${api.validation(props.valueInput || props.value, props.isError)}`}>{props.label}</p>\r\n        <Input\r\n            onChange={props.changeValue}\r\n            name={props.name} type=\"date\"\r\n            value={props.valueInput}\r\n            required={props.required ? true : false}\r\n            className={`full_width input_margin ${api.validation(props.valueInput || props.value, props.isError)}`}\r\n        />\r\n    </React.Fragment>\r\n)","import React from 'react';\r\nimport Select from '@material-ui/core/Select';\r\nimport api from '../api';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nexport default (props) => (\r\n  // className={api.setClasses(['full_width', 'select'], { hidden: props.options })}\r\n  <div className={api.setClasses(['full_width', 'select'], { hidden: props.options == false , error: props.validation && props.required })}>\r\n    <p className={`form_label ${api.validation(props.value, props.isError)}`}>{props.label}</p>\r\n    <Select\r\n      onChange={props.changeValue}\r\n      className={`full_width ${api.validation(props.value, props.isError)}`}\r\n      value={!props.valueInput ? props.value : props.valueInput}\r\n      required={props.required ? true : false}\r\n    >\r\n      {Object.entries(props.options).map((item, index) => {\r\n        return (\r\n          <MenuItem\r\n            key={index}\r\n            value={item[0]}\r\n          >{item[1]}</MenuItem>\r\n      )})}\r\n    </Select>\r\n  </div >\r\n)","import React from 'react';\r\nimport { Input } from '@material-ui/core';\r\nimport api from '../api';\r\nexport default (props) => (\r\n    <React.Fragment>\r\n        <p className={`form_label ${api.validation(props.value, props.isError)}`}>{props.label}</p>\r\n        <Input onChange={props.changeValue}\r\n            readOnly={props.name === 'cost' || props.name === 'name' ? true : false}\r\n            name={props.name} type={\"text\"}\r\n            value={props.name !== 'cost' && props.name !== 'name' ? props.valueInput : props.value}\r\n            required={props.required ? true : false}\r\n            onFocus={props.focusCount}\r\n            className={`full_width input_margin ${api.validation(props.value, props.isError)}`}\r\n        />\r\n        {props.validation && props.required &&\r\n            <span className=\"error_message\">Это поле обязательно для заполения</span>\r\n        }\r\n    </React.Fragment>\r\n)","import React from 'react';\r\nimport api from '../api';\r\n\r\nfunction HelpList(props) {\r\n  const adsItem = () => {\r\n    props.addItem(props.value)\r\n  }\r\n  return (\r\n    <div onClick={adsItem} className=\"model_name\">\r\n      {props.value.model}\r\n    </div>\r\n  )\r\n}\r\nexport default api.connect(HelpList);\r\n","import React from 'react';\r\nimport api from '../api';\r\nimport Components from '../components';\r\nimport Group from './group';\r\nimport HelpList from '../Page/helpList';\r\nclass Element extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      helpList: false,\r\n      valueInput: '',\r\n      current: '',\r\n      currentPrice: 0,\r\n      isError: false,\r\n      complete: false\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.data.data.value) {\r\n      this.setState({\r\n        valueInput: this.props.data.data.value\r\n      })\r\n    }\r\n  }\r\n  focusCount = (e) => {\r\n    if (this.props.data.data.name === 'count' && !this.state.valueInput) {\r\n      this.setState({\r\n        valueInput: 1\r\n      })\r\n    }\r\n  }\r\n  addModel = (value) => {\r\n    let addModelToRedux = { ...this.props.toReduxValue };\r\n    addModelToRedux.data[this.props.path[0]].data[this.props.path[1]].data[0].data.map((el) => {\r\n      switch (el.data.name) {\r\n        case 'cost':\r\n          el.data.value = parseInt(value.cost);\r\n          let stateValue = el.data.value;\r\n          this.props.setRedux({\r\n            stateValue\r\n          })\r\n          return this.props.setRedux({\r\n            addModelToRedux\r\n          });\r\n        case 'name':\r\n          el.data.value = value.name;\r\n          return this.props.setRedux({\r\n            addModelToRedux\r\n          });\r\n        case 'model':\r\n          el.data.value = value.id;\r\n          this.setState({\r\n            valueInput: value.model\r\n          })\r\n          return this.props.setRedux({\r\n            addModelToRedux\r\n          });\r\n        default:\r\n      }\r\n      this.setState({\r\n        helpList: false\r\n      })\r\n      return this.props.newReduxValues;\r\n    })\r\n  }\r\n  changeValue = (e) => {\r\n    let formData = new FormData();\r\n    let dataApi = this.props.data.data\r\n    let toReduxValue = { ...this.props.apiPage };\r\n    const setValueToRedux = () => {\r\n      this.setState({\r\n        valueInput: e.target.value,\r\n      });\r\n      !e.target.value ? (this.setState({\r\n        isError: true\r\n      })) : (this.setState({\r\n        isError: false\r\n      }));\r\n      api.getRefElement(toReduxValue, this.props.path, e.target.value);\r\n      this.props.setRedux({\r\n        toReduxValue\r\n      });\r\n    }\r\n    const setDependeces = () => {\r\n      let goSend = false;\r\n      toReduxValue.data[this.props.keyGroup].data.forEach((dataValue) => {\r\n        if (!dataValue.data.dependence && dataValue.type !== 'hidden') {\r\n          const id = dataValue.data.value;\r\n          formData.append(`${dataValue.data.name}[]`, id)\r\n          dataValue.data.value ? goSend = true : goSend = false;\r\n        }\r\n      })\r\n      if (goSend) {\r\n        fetch(`${api.url}`, {\r\n          method: 'POST',\r\n          body: formData\r\n        })\r\n          .then(res => res.json())\r\n          .then(res => {\r\n            let dependenceValues = { ...this.props.toReduxValue }\r\n            dependenceValues.data[this.props.keyGroup].data.map((dataValue, index) => {\r\n              if (dataValue.data.dependence) {\r\n                let apiRes = res.fields.distributors[0].options;\r\n                dependenceValues.data[this.props.keyGroup].data[index].data.options = apiRes;\r\n                this.props.setRedux({\r\n                  dependenceValues\r\n                });\r\n              }\r\n              return this.props.dependenceValues;\r\n            })\r\n          })\r\n      }\r\n    }\r\n    setValueToRedux();\r\n    if (dataApi.type === 'select' && !dataApi.dependence && dataApi.value) {\r\n      setDependeces();\r\n    }\r\n    else if (dataApi.name === 'model') {\r\n      formData.append('model', e.target.value)\r\n      fetch(`${api.url}`, {\r\n        method: 'POST',\r\n        body: formData\r\n      })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          !res.error ? this.setState({\r\n            helpList: res.products\r\n          }) : this.setState({\r\n            helpList: false\r\n          })\r\n          if (res.products) {\r\n            Object.entries(res.products).map((result) => {\r\n              if (result[1].model.toUpperCase() === this.state.valueInput.toUpperCase()) {\r\n                this.setState({\r\n                  current: result[1],\r\n                  complete: true,\r\n                  helpList: false\r\n                })\r\n              }\r\n              return this.state;\r\n            })\r\n          }\r\n        }).then((res) => {\r\n          if (this.state.current) {\r\n            let newReduxValues = { ...this.props.toReduxValue };\r\n            newReduxValues.data[this.props.path[0]].data[this.props.path[1]].data[0].data.map((el) => {\r\n              switch (el.data.name) {\r\n                case 'cost':\r\n                  el.data.value = parseInt(this.state.current.cost);\r\n                  let stateValue = el.data.value;\r\n                  this.props.setRedux({\r\n                    stateValue\r\n                  })\r\n                  return this.props.setRedux({\r\n                    newReduxValues\r\n                  });\r\n                case 'name':\r\n                  el.data.value = this.state.current.name;\r\n                  return this.props.setRedux({\r\n                    newReduxValues\r\n                  });\r\n                case 'model':\r\n                  el.data.value = this.state.current.id\r\n                  this.setState({\r\n                    valueInput:  el.data.value\r\n                  })\r\n                  return this.props.setRedux({\r\n                    newReduxValues\r\n                  });\r\n                default:\r\n              }\r\n              return this.props.newReduxValues;\r\n            })\r\n          }\r\n        })\r\n      if ((e.target.value !== this.state.current.name && this.state.complete) || !e.target.value) {\r\n        let removeToRedux = { ...this.props.newReduxValues };\r\n        removeToRedux.data[this.props.path[0]].data[this.props.path[1]].data[0].data.map((el) => {\r\n          switch (el.data.name) {\r\n            case 'cost':\r\n              el.data.value = '';\r\n              let stateValue = el.data.value;\r\n              this.props.setRedux({\r\n                stateValue\r\n              })\r\n              return this.props.setRedux({\r\n                removeToRedux\r\n              });\r\n            case 'name':\r\n              el.data.value = '';\r\n              return this.props.setRedux({\r\n                removeToRedux\r\n              });\r\n            default:\r\n          }\r\n          this.setState({\r\n            complete: false,\r\n            current: ''\r\n          })\r\n          return this.props.removeToRedux;\r\n        })\r\n      }\r\n    }\r\n    else if (dataApi.name === 'count' && this.props.stateValue) {\r\n      const callBackCost = (def) => {\r\n        let countValueToRedux = { ...this.props.newReduxValues };\r\n        countValueToRedux.data[this.props.path[0]].data[this.props.path[1]].data[0].data.map((el) => {\r\n          if (el.data.name === 'cost') {\r\n            if (el.data.value) {\r\n              let old = this.props.stateValue;\r\n              !def ? el.data.value = old * this.state.valueInput : el.data.value = old;\r\n            }\r\n          }\r\n          return this.props.setRedux({\r\n            countValueToRedux\r\n          });\r\n        })\r\n      }\r\n      if (e.target.value > 0) {\r\n        this.setState({\r\n          valueInput: e.target.value.replace(/\\D/, '')\r\n        }, (() => {\r\n          callBackCost();\r\n        }));\r\n      }\r\n      else {\r\n        this.setState({\r\n          valueInput: 1\r\n        }, (() => {\r\n          callBackCost(true);\r\n        }));\r\n        e.target.value = 1;\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    switch (this.props.data.type) {\r\n      case 'text':\r\n        return (\r\n          <React.Fragment>\r\n            {this.props.isError && this.props.typeError && \r\n              this.props.typeError.map((element) => {\r\n                let errorType = Object.keys(element.data).filter((filtItem) => this.props.data.data.name === filtItem);\r\n                return (\r\n                  <p class=\"error_message\">{element.data[errorType]}</p>\r\n                )\r\n              })\r\n            }\r\n            <Components.text \r\n              valueInput={this.state.valueInput}\r\n              label={this.props.data.data.label}\r\n              changeValue={this.changeValue}\r\n              name={this.props.data.data.name}\r\n              value={this.props.data.data.value}\r\n              validation={this.state.isError}\r\n              isError={this.props.isError}\r\n              focusCount={this.focusCount}\r\n              required={this.props.data.data.required} helpList={this.state.helpList} />\r\n            {this.props.data.data.name === 'model' && this.state.helpList &&\r\n              <div className=\"help_list\">\r\n                {this.state.helpList.map((item, index) => {\r\n                  return (<HelpList addItem={this.addModel} value={item} key={index} indexEl={index} />)\r\n                })}\r\n              </div>\r\n            }\r\n          </React.Fragment>\r\n        )\r\n      case 'select':\r\n        return <Components.select changeValue={this.changeValue} name={this.props.data.data.name}\r\n          valueInput={this.state.valueInput}\r\n          value={this.props.data.data.value}\r\n          dependence={this.props.data.data.dependence}\r\n          required={this.props.data.data.required}\r\n          options={this.props.data.data.options}\r\n          validation={this.state.isError}\r\n          label={this.props.data.data.label}\r\n          isError={this.props.isError}\r\n        />\r\n      case 'date':\r\n        return <Components.date label={this.props.data.data.label} changeValue={this.changeValue} name={this.props.data.data.name}\r\n          validation={this.state.isError}\r\n          valueInput={this.state.valueInput}\r\n          isError={this.props.isError}\r\n          value={this.props.data.data.value}\r\n          required={this.props.data.data.required} />\r\n      case 'date_list':\r\n        return <Components.date_list label={this.props.data.data.label} changeValue={this.changeValue} name={this.props.data.data.name}\r\n          validation={this.state.isError}\r\n          isError={this.props.isError}\r\n          valueInput={this.state.valueInput}\r\n          value={this.props.data.data.value}\r\n          required={this.props.data.data.required} />\r\n      case 'textarea':\r\n        return <Components.textarea label={this.props.data.data.label} changeValue={this.changeValue} required={this.props.data.data.required}\r\n          valueInput={this.state.valueInput}\r\n          isError={this.props.isError}\r\n          validation={this.state.isError}\r\n          value={this.props.data.data.value}\r\n        />\r\n      case 'hidden':\r\n        return <Components.hidden label={this.props.data.data.label} />\r\n      case 'group':\r\n        return <Group keyGroup={this.props.indexEl} path={[...this.props.path]} data={this.props.data} />\r\n      default:\r\n        return <Components.default_c type={this.props.data.data.type} />\r\n    }\r\n  }\r\n}\r\n\r\nexport default api.connect(Element);\r\n","import React from 'react';\r\nimport Element from './element'\r\nimport api from '../api';\r\n\r\nfunction Group(props) {\r\n  return (\r\n    <div className=\"form_groups wrapper full_width animate_group\">\r\n      <h2 className=\"title_group full_width\">{props.data.title}</h2>\r\n      {props.data.type !== 'hidden' &&\r\n        props.data.data.map((item, index) => \r\n        <Element path={[...props.path, index]} key={index} indexEl={index}  keyGroup={props.indexGroup} data={item} />)\r\n      }\r\n    </div>\r\n  )\r\n}\r\nexport default api.connect(Group);\r\n","import React from 'react';\r\nimport api from '../api';\r\nclass DeleteItem extends React.Component {\r\n  removeElementAds = () => {\r\n    let deleteStateToRedux = this.props.addStateToRedux ? {...this.props.addStateToRedux} : {...this.props.apiPage};\r\n    delete deleteStateToRedux.data[this.props.newPath];\r\n    this.props.setRedux({\r\n      deleteStateToRedux\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div onClick={this.removeElementAds} className=\"button next_button button_add button_delete_margin_left\" variant=\"contained\">\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default api.connect(DeleteItem);","import React from 'react';\r\nimport api from '../api';\r\nimport clone from 'clone';\r\nclass AddItem extends React.Component {\r\n  addingItem = () => {\r\n    let addStateToRedux = { ...this.props.apiPage };\r\n    let newItem = clone(this.props.newPath);\r\n    let depthClone = clone(api.clearObject);\r\n    depthClone.map((object) => {\r\n      if (addStateToRedux.data[newItem].data.length === object.data.length) {\r\n        if (addStateToRedux.data[newItem].title === object.title) {\r\n          addStateToRedux.data.splice(newItem + 1 , 0, object);\r\n          object.duplicate = true;\r\n          return this.props.setRedux({\r\n            addStateToRedux\r\n          });\r\n        }\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div onClick={this.addingItem} className=\"button next_button button_add\" variant=\"contained\">\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default api.connect(AddItem);","import React from 'react';\r\nimport api from '../api';\r\nimport DeleteItem from './deleteItem';\r\nimport AddItem from './addItem';\r\nclass Controllers extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"flex\">\r\n        <AddItem  fields={this.props.fields} type={this.props.type} dataApi={this.props.dataApi} newPath={this.props.index} />\r\n        {this.props.dataApi.data[this.props.index].duplicate &&\r\n          <React.Fragment  >\r\n            <DeleteItem dataApi={this.props.dataApi} newPath={this.props.index} />\r\n          </React.Fragment>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default api.connect(Controllers);","import React from 'react';\r\nimport preloaders from '../images/preloader.gif';\r\nimport api from '../api';\r\nimport Group from './group';\r\nimport Controllers from '../components/contollers';\r\nclass RenderPages extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoad: false,\r\n      indexes: [],\r\n      isSaveProgress: false\r\n    }\r\n  }\r\n  changePage = (e) => {\r\n    let classItem = e.target;\r\n    let page = this.props.page;\r\n    let sendObject = JSON.stringify({\r\n      data: this.props.apiPage.data,\r\n      type: 'section',\r\n      method: 'save',\r\n      page: page\r\n    });\r\n    this.setState({\r\n      isSaveProgress: true\r\n    })\r\n    if (!classItem.classList.contains('back_button')) {\r\n      let response = api.saveData(sendObject);\r\n      response.then((res) => {\r\n        res.errors ? this.props.setRedux({\r\n          isError: true,\r\n          typeError: res.errors\r\n        }) : this.props.setRedux({\r\n          isError: false\r\n        })\r\n        this.setState({\r\n          isSaveProgress: false\r\n        })\r\n        console.log(res)\r\n      })\r\n      .then(() => {\r\n        if (!this.props.isError) {\r\n          classItem.classList.contains('back_button') ? (page -= 1) : (page < 2 ? page += 1 : page = 0);\r\n          api.fetchData(page, () => { this.setState({ isLoad: true }) }).then((res) => {\r\n            this.props.setRedux({ apiPage: res });\r\n            this.setState({ isLoad: false });\r\n            this.props.setRedux({ page });\r\n            this.setState({\r\n              isSaveProgress: false\r\n            })\r\n          })\r\n          api.getClearObject(page);\r\n        }\r\n      })\r\n    }\r\n    else {\r\n      classItem.classList.contains('back_button') ? (page -= 1) : (page < 2 ? page += 1 : page = 0);\r\n      api.fetchData(page, () => { this.setState({ isLoad: true }) }).then((res) => {\r\n        this.props.setRedux({ apiPage: res });\r\n        this.setState({ isLoad: false });\r\n        this.props.setRedux({ page });\r\n        this.setState({\r\n          isSaveProgress: false\r\n        })\r\n      })\r\n      api.getClearObject(page);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {!this.state.isLoad &&\r\n          <div className=\"form_page flex_center\">\r\n            <h1 className=\"form__title\">Регистрация проектов</h1>\r\n            <div className=\"form_block\">\r\n              {this.props.isError &&\r\n                <span className=\"error_message\">Не все поля заполнены</span>\r\n              }\r\n              {this.props.apiPage.data.map((item, index) => {\r\n                if (item && item.type !== 'hidden') {\r\n                  return (\r\n                    <React.Fragment key={index + 'fragment'} >\r\n                      <Group path={[index]} key={index} indexGroup={index} data={item} />\r\n                      <Controllers fields={item.data} type={item.type} key={item} dataApi={this.props.apiPage} index={index} />\r\n                    </React.Fragment>\r\n                  )\r\n                }\r\n                else {\r\n                  return false;\r\n                }\r\n              })\r\n              }\r\n            </div>\r\n            {this.props.page === 0 && !this.state.isSaveProgress &&\r\n              <div onClick={this.changePage} className=\"button next_button\" variant=\"contained\">\r\n                Далее\r\n              </div>\r\n            }\r\n            {this.props.page === 0 && this.state.isSaveProgress &&\r\n              <img src={preloaders} alt=\"btn_loader\" className=\"loader_button\" />\r\n            }\r\n            {this.props.page === 1 && !this.state.isSaveProgress &&\r\n              <div className=\"flex mg_top_btns\">\r\n                <div onClick={this.changePage} className=\"button next_button\" variant=\"contained\">\r\n                  Далее\r\n                </div>\r\n                <div onClick={this.changePage} className=\"button left_btn_margin back_button \" variant=\"contained\">\r\n                  Назад\r\n                </div>\r\n              </div>\r\n            }\r\n            {this.props.page === 1 && this.state.isSaveProgress &&\r\n              <img src={preloaders} alt=\"btn_loader\" className=\"loader_button\" />\r\n            }\r\n            {this.props.page === 2 && !this.state.isSaveProgress &&\r\n              <div className=\"flex mg_top_btns\">\r\n                <div onClick={this.changePage} className=\"button next_button\" variant=\"contained\">\r\n                  Отправить\r\n             </div>\r\n                <div onClick={this.changePage} className=\"button left_btn_margin back_button \" variant=\"contained\">\r\n                  Назад\r\n             </div>\r\n              </div>\r\n            }\r\n            {this.props.page === 2 && this.state.isSaveProgress &&\r\n              <img src={preloaders} alt=\"btn_loader\" className=\"loader_button\" />\r\n            }\r\n          </div>\r\n        }\r\n        {this.state.isLoad &&\r\n          <div className=\"flex wrapper_loader\">\r\n            <img src={preloaders} alt=\"preloader\" className=\"preloader\" />\r\n            {this.props.apiPage.error &&\r\n              <>\r\n                <p className=\"preloader_text\">Ошибка на сервере</p>\r\n                <p className=\"preloader_text\">{this.props.apiPage.error}</p>\r\n              </>\r\n            }\r\n          </div>\r\n        }\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default api.connect(RenderPages);\r\n","import React from 'react';\r\nimport RenderPage from './renderPage';\r\nimport preloaders from '../images/preloader.gif';\r\nimport api from '../api';\r\n\r\nclass Form extends React.Component {\r\n  componentDidMount() {\r\n    api.fetchData(this.props.page).then((res) => {\r\n      this.props.setRedux({ apiPage: res, empty: res });\r\n    });\r\n    api.getClearObject(this.props.page);\r\n  }\r\n  render() {\r\n    if (!this.props.apiPage.status) {\r\n      return (\r\n        <div className=\"wrapper\">\r\n          <div className=\"flex wrapper_loader\">\r\n            <img src={preloaders} alt=\"preloader\" className=\"preloader\" />\r\n            {this.props.apiPage.error &&\r\n              <>\r\n                <p className=\"preloader_text\">Ошибка на сервере</p>\r\n                <p className=\"preloader_text\">{this.props.apiPage.error}</p>\r\n              </>\r\n            }\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    else {\r\n      return (\r\n        <section className=\"form_page_wrapper full_screen flex_center\">\r\n          <RenderPage />\r\n        </section>\r\n      )\r\n    }\r\n  }\r\n}\r\nexport default api.connect(Form);\r\n","import React from 'react';\nimport './App.css';\nimport Form from './Page/form';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default (state = {}, newState = {}) => {\r\n  return Object.assign({}, state, newState);\r\n};","const initialState = {\r\n  page: 0,\r\n  apiPage: {\r\n    data: [],\r\n    resposneServer: false\r\n  },\r\n  sendData: ''\r\n}\r\n\r\nexport default initialState;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './App.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux'\r\nimport { createStore } from 'redux'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport reducers from './redux/reducers';\r\nimport initialState from './redux/initialState';\r\n\r\nconst store = createStore(reducers, initialState,  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}