{"version":3,"sources":["api.js","redux/actions.js","Page/helpList.js","components/index.js","components/default_c.js","components/hidden.js","components/textarea.js","components/date_list.js","components/date.js","components/select.js","components/text.js","Page/element.js","Page/group.js","components/deleteItem.js","components/addItem.js","components/contollers.js","Page/renderPage.js","Page/form.js","App.js","serviceWorker.js","redux/reducers.js","redux/initialState.js","index.js","images/preloader.gif"],"names":["APIURL","api","url","connect","component_","state","newState","Object","keys","forEach","key","whithoutType","dispatch","setRedux","assign","type","actions","skeletonObject","fetchData","step","before","fetch","method","then","res","json","getRefElement","apiPageData","path","uiValue","getValue","value","i","length","data","setClasses","defaultClasses","isActiveClasses","classNames","push","map","className","filter","join","props","onClick","addItem","model","label","Fragment","TextField","onChange","changeValue","required","multiline","Input","name","error","validation","hidden","options","Select","valueInput","entries","item","index","MenuItem","readOnly","helpList","addModel","indexEl","Element","e","formData","FormData","dataApi","toReduxValue","apiPage","target","setState","isError","dependence","goSend","keyGroup","dataValue","id","obj","find","append","body","dependenceValues","apiRes","fields","distributors","setDependeces","products","result","toUpperCase","current","newReduxValues","el","parseInt","cost","stateValue","callBackCost","def","countValueToRedux","old","replace","currentPrice","this","newKey","React","Component","title","indexGroup","DeleteItem","removeElementAds","deleteStateToRedux","addStateToRedux","splice","newPath","variant","AddItem","addingItem","clearObject","console","log","clone","Controllers","duplicate","RenderPages","changePage","page","classList","contains","isLoad","indexes","src","preloaders","alt","Form","status","App","Boolean","window","location","hostname","match","initialState","resposneServer","empty","fieldConfig","fieldValues","sizeGroup","fieldGroup","countForms","sendData","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.9aee4fe7.chunk.js","sourcesContent":["import { connect } from 'react-redux';\r\nimport * as actions from './redux/actions';\r\n\r\nconst whithoutType = (state) => {\r\n  let newState = {};\r\n  Object.keys(state).forEach((key) => {\r\n    if (key !== 'type') {\r\n      newState[key] = state[key];\r\n    }\r\n  })\r\n  return newState;\r\n}\r\nconst APIURL = 'http://192.168.0.251:8086/local/form/ajax_update_form.php?page=';\r\nconst api = {\r\n  url: APIURL,\r\n  connect: (component_) => {\r\n    return connect(\r\n      (state) => (whithoutType(state)),\r\n      (dispatch) => ({\r\n        setRedux: (state) => dispatch(actions.setRedux(state))\r\n      }))(component_);\r\n  },\r\n  skeletonObject: '',\r\n  fetchData: (step = 0, before = () => { }) => {\r\n    (typeof before === 'function') && before();\r\n    return fetch(`${APIURL + step}`, {\r\n      method: 'GET'\r\n    })\r\n      .then(res => res.json())\r\n      .then(res => api.skeletonObject = res)\r\n  },\r\n  getRefElement: (apiPageData = {}, path = [], uiValue) => {\r\n    const getValue = (value) => {\r\n      for (let i = 0; i < path.length; i++) {\r\n        value = value.data[path[i]];\r\n      }\r\n      return value.data.value = uiValue;\r\n    }\r\n    getValue(apiPageData);\r\n  },\r\n  setClasses: (defaultClasses = false, isActiveClasses = false) => {\r\n    //defaultClasses = ['className']\r\n    //isActiveClasses = { className: 'condition' }\r\n    let classNames = [],\r\n      className = '';\r\n    //handling defaultClasses\r\n    if (defaultClasses) {\r\n      classNames = defaultClasses;\r\n    }\r\n\r\n    //handling active classes\r\n    if (isActiveClasses) {\r\n      classNames.push(...Object.keys(isActiveClasses)\r\n        .map((className) => (isActiveClasses[className] && className))\r\n        .filter((className) => (className)));\r\n    }\r\n\r\n    //joining classes\r\n    className = classNames.join(' ');\r\n\r\n    return className;\r\n  },\r\n};\r\n\r\nexport default api;","export const setRedux = (state = {}) => {\r\n    return (Object.assign({ type: 'redux' }, state))\r\n};","import React from 'react';\r\nimport api from '../api';\r\n\r\nfunction HelpList(props) {\r\n  const adsItem = () => {\r\n    props.addItem(props.value)\r\n  }\r\n  return (\r\n    <div onClick={adsItem} className=\"model_name\">\r\n      {props.value.model}\r\n    </div>\r\n  )\r\n}\r\nexport default api.connect(HelpList);\r\n","import default_c from './default_c';\r\nimport hidden from './hidden';\r\nimport textarea from './textarea';\r\nimport date_list from './date_list';\r\nimport date from './date';\r\nimport select from './select';\r\nimport text from './text';\r\n\r\nexport default {\r\n    default_c,\r\n    hidden,\r\n    textarea,\r\n    date_list,\r\n    date,\r\n    select,\r\n    text\r\n}","import React from 'react';\r\n\r\nexport default (props) => (<p> {`${props.type} is not supporting`} </p>);","import React from 'react';\r\n\r\nexport default (props) => (\r\n    <div className=\"hidden dispaly_none\">\r\n        <p className=\"form_label\">{props.label}</p>\r\n    </div>\r\n);","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport default (props) => (\r\n  <React.Fragment>\r\n    <p className=\"form_label\">{props.label}</p>\r\n    <TextField\r\n      onChange={props.changeValue}\r\n      required={props.required ? true : false}\r\n      className=\"full_width input_margin\"\r\n      multiline={true} />\r\n  </React.Fragment>\r\n);","import React from 'react';\r\nimport { Input } from '@material-ui/core';\r\nimport api from '../api';\r\nexport default (props) => (\r\n    <React.Fragment>\r\n        <p className=\"form_label\">{props.label}</p>\r\n        <Input\r\n            onChange={props.changeValue}\r\n            name={props.name}\r\n            type=\"date\"\r\n            required={props.required ? true : false}\r\n            className={api.setClasses(['full_width', 'input_margin'], { error: props.validation && props.required })}\r\n        />\r\n    </React.Fragment>\r\n)","import React from 'react';\r\nimport { Input } from '@material-ui/core';\r\nimport api from '../api';\r\n\r\nexport default (props) => (\r\n    <React.Fragment>\r\n        <p className=\"form_label\">{props.label}</p>\r\n        <Input\r\n            onChange={props.changeValue}\r\n            name={props.name} type=\"date\"\r\n            required={props.required ? true : false}\r\n            className={api.setClasses(['full_width', 'input_margin'], { error: props.validation && props.required })}\r\n        />\r\n    </React.Fragment>\r\n)","import React from 'react';\r\nimport Select from '@material-ui/core/Select';\r\nimport api from '../api';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nexport default (props) => (\r\n  // className={api.setClasses(['full_width', 'select'], { hidden: props.options })}\r\n  <div className={api.setClasses(['full_width', 'select'], { hidden: props.options == false , error: props.validation && props.required })}>\r\n    <p className=\"form_label\">{props.label}</p>\r\n    <Select\r\n      onChange={props.changeValue}\r\n      className={api.setClasses(['full_width'], {error: props.validation })}\r\n      value={props.valueInput}\r\n      required={props.required ? true : false}\r\n    >\r\n      {Object.entries(props.options).map((item, index) => {\r\n        return (\r\n          <MenuItem\r\n            key={index}\r\n            value={item[1]}\r\n          >{item[1]}</MenuItem>\r\n        )\r\n      })}\r\n    </Select>\r\n  </div >\r\n)","import React from 'react';\r\nimport HelpList from '../Page/helpList';\r\nimport { Input } from '@material-ui/core';\r\nimport api from '../api';\r\nexport default (props) => (\r\n    <React.Fragment>\r\n        <p className=\"form_label\">{props.label}</p>\r\n        <Input onChange={props.changeValue}\r\n            readOnly={props.name === 'cost' || props.name === 'name' ? true : false}\r\n            name={props.name} type={\"text\"}\r\n            value={props.name !== 'cost' && props.name !== 'name' ? props.valueInput : props.value}\r\n            required={props.required ? true : false}\r\n            className={api.setClasses(['form_label full_width', 'input_margin'], { error: props.validation && props.required })}\r\n        />\r\n        {props.name === 'model' && props.helpList &&\r\n            <div className=\"help_list\">\r\n                {props.helpList.map((item, index) => {\r\n                    return (<HelpList addItem={props.addModel} value={item} key={index} indexEl={index} />)\r\n                })}\r\n            </div>\r\n        }\r\n        {props.validation && props.required &&\r\n            <span className=\"error_message\">Это поле обязательно для заполения</span>\r\n        }\r\n    </React.Fragment>\r\n)","import React from 'react';\r\nimport api from '../api';\r\nimport Components from '../components';\r\nimport Group from './group';\r\n\r\nclass Element extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      helpList: false,\r\n      valueInput: '',\r\n      current: '',\r\n      currentPrice: 0,\r\n      isError: false\r\n    }\r\n  }\r\n  addModel = (value) => {\r\n    // props.setValue(value, props.keyGroup, props.indexEl, false, true);\r\n    // setValueInput(props.changeValue)\r\n    // setHelpList(false);\r\n  }\r\n  changeValue = (e) => {\r\n    let formData = new FormData();\r\n    let dataApi = this.props.data.data\r\n    let toReduxValue = { ...this.props.apiPage };\r\n    !e.target.value ? (this.setState({\r\n      isError: true\r\n    })) : (this.setState({\r\n      isError: false\r\n    }));\r\n    const setValueToRedux = () => {\r\n      this.setState({\r\n        valueInput: e.target.value,\r\n      });\r\n      api.getRefElement(toReduxValue, this.props.path, e.target.value);\r\n      this.props.setRedux({\r\n        toReduxValue\r\n      });\r\n    }\r\n    const setDependeces = () => {\r\n      let goSend = false;\r\n      toReduxValue.data[this.props.keyGroup].data.forEach((dataValue) => {\r\n        if (!dataValue.data.dependence && dataValue.type !== 'hidden') {\r\n          const getKeyByValue = (obj, value) =>\r\n            Object.keys(obj).find(key => obj[key] === value);\r\n          const id = getKeyByValue(dataValue.data.options, dataValue.data.value);\r\n          formData.append(`${dataValue.data.name}[]`, id)\r\n          dataValue.data.value ? goSend = true : goSend = false;\r\n        }\r\n      })\r\n      if (goSend) {\r\n        fetch(`${api.url}`, {\r\n          method: 'POST',\r\n          body: formData\r\n        })\r\n          .then(res => res.json())\r\n          .then(res => {\r\n            let dependenceValues = { ...this.props.toReduxValue }\r\n            dependenceValues.data[this.props.keyGroup].data.map((dataValue, index) => {\r\n              if (dataValue.data.dependence) {\r\n                let apiRes = res.fields.distributors[0].options;\r\n                dependenceValues.data[this.props.keyGroup].data[index].data.options = apiRes\r\n                this.props.setRedux({\r\n                  dependenceValues\r\n                });\r\n              }\r\n              return this.props.dependenceValues;\r\n            })\r\n          })\r\n      }\r\n    }\r\n    setValueToRedux();\r\n    if (dataApi.type === 'select' && !dataApi.dependence && dataApi.value) {\r\n      setDependeces();\r\n    }\r\n    else if (dataApi.name === 'model') {\r\n      formData.append('model', e.target.value)\r\n      fetch(`${api.url}`, {\r\n        method: 'POST',\r\n        body: formData\r\n      })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          !res.error ? this.setState({\r\n            helpList: res.products\r\n          }) : this.setState({\r\n            helpList: false\r\n          })\r\n          if (res.products) {\r\n            Object.entries(res.products).map((result) => {\r\n              if (result[1].model.toUpperCase() === this.state.valueInput.toUpperCase()) {\r\n                this.setState({\r\n                  helpList: false\r\n                })\r\n                this.setState({\r\n                  current: result[1]\r\n                })\r\n              }\r\n              return this.state;\r\n            })\r\n          }\r\n        }).then((res) => {\r\n          if (this.state.current) {\r\n            let newReduxValues = { ...this.props.toReduxValue };\r\n            newReduxValues.data[this.props.path[0]].data[this.props.path[1]].data[0].data.map((el) => {\r\n              switch (el.data.name) {\r\n                case 'cost':\r\n                  el.data.value = parseInt(this.state.current.cost);\r\n                  let stateValue = el.data.value;\r\n                  return this.props.setRedux({\r\n                    newReduxValues,\r\n                    stateValue\r\n                  });\r\n                case 'name':\r\n                  el.data.value = this.state.current.name;\r\n                  return this.props.setRedux({\r\n                    newReduxValues\r\n                  });\r\n                default:\r\n              }\r\n              return this.props.newReduxValues;\r\n            })\r\n          }\r\n        })\r\n    }\r\n    else if (dataApi.name === 'count') {\r\n      const callBackCost = (def) => {\r\n        let countValueToRedux = { ...this.props.newReduxValues };\r\n        countValueToRedux.data[this.props.path[0]].data[this.props.path[1]].data[0].data.map((el) => {\r\n          if (el.data.name === 'cost') {\r\n            if (el.data.value) {\r\n              let old = this.props.stateValue;\r\n              !def ? el.data.value = old * this.state.valueInput : el.data.value = old\r\n            }\r\n          }\r\n          return this.props.setRedux({\r\n            countValueToRedux\r\n          });\r\n        })\r\n      }\r\n      if (e.target.value > 0) {\r\n        this.setState({\r\n          valueInput: e.target.value.replace(/\\D/, '')\r\n        }, (() => {\r\n          callBackCost();\r\n        }));\r\n      }\r\n      else {\r\n        this.setState({\r\n          valueInput: 1\r\n        }, (() => {\r\n          callBackCost(true);\r\n        }));\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    switch (this.props.data.type) {\r\n      case 'text':\r\n        return (\r\n          <React.Fragment>\r\n            <Components.text value={this.props.data.data.value} valueInput={this.state.valueInput} label={this.props.data.data.label} changeValue={this.changeValue}\r\n              name={this.props.data.data.name}\r\n              validation={this.state.isError}\r\n              required={this.props.data.data.required} helpList={this.state.helpList} />\r\n          </React.Fragment>\r\n        )\r\n      case 'select':\r\n        return <Components.select changeValue={this.changeValue} name={this.props.data.data.name}\r\n          valueInput={this.state.valueInput}\r\n          value={this.props.data.data.value}\r\n          dependence={this.props.data.data.dependence}\r\n          required={this.props.data.data.required}\r\n          options={this.props.data.data.options}\r\n          validation={this.state.isError}\r\n          label={this.props.data.data.label}\r\n        />\r\n      case 'date':\r\n        return <Components.date label={this.props.data.data.label} changeValue={this.changeValue} name={this.props.data.data.name}\r\n          validation={this.state.isError}\r\n          required={this.props.data.data.required} />\r\n\r\n      case 'date_list':\r\n        return <Components.date_list label={this.props.data.data.label} changeValue={this.changeValue} name={this.props.data.data.name}\r\n            validation={this.state.isError}\r\n          required={this.props.data.data.required} />\r\n      case 'textarea':\r\n        return <Components.textarea label={this.props.data.data.label} changeValue={this.changeValue} required={this.props.data.data.required}\r\n        validation={this.state.isError}\r\n         />\r\n      case 'hidden':\r\n        return <Components.hidden label={this.props.data.data.label} />\r\n      case 'group':\r\n        let newKey = { ...this.props.keyGroup };\r\n        newKey = this.props.indexEl;\r\n        this.props.setRedux({\r\n          newKey\r\n        })\r\n        return <Group keyGroup={this.props.indexEl} path={[...this.props.path]} data={this.props.data} />\r\n      default:\r\n        return <Components.default_c type={this.props.data.data.type} />\r\n    }\r\n  }\r\n}\r\n\r\nexport default api.connect(Element);\r\n","import React from 'react';\r\nimport Element from './element'\r\nimport api from '../api';\r\n\r\nfunction Group(props) {\r\n  return (\r\n    <div className=\"form_groups wrapper full_width\">\r\n      <h2 className=\"title_group full_width\">{props.data.title}</h2>\r\n      {props.data.type !== 'hidden' &&\r\n        props.data.data.map((item, index) => \r\n        <Element path={[...props.path, index]} key={index} indexEl={index}  keyGroup={props.indexGroup} data={item} />)\r\n      }\r\n    </div>\r\n  )\r\n}\r\nexport default api.connect(Group);\r\n","import React from 'react';\r\nimport api from '../api';\r\n\r\n\r\nclass DeleteItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  removeElementAds = () => {\r\n    let deleteStateToRedux = {...this.props.addStateToRedux};\r\n    deleteStateToRedux.data.splice(this.props.newPath, 1);\r\n    this.props.setRedux({\r\n      deleteStateToRedux\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div onClick={this.removeElementAds} className=\"button next_button button_add button_delete_margin_left\" variant=\"contained\">\r\n        Удалить\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default api.connect(DeleteItem);","import React from 'react';\r\nimport api from '../api';\r\nimport clone from 'clone';\r\nclass AddItem extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n    }\r\n    addingItem = () => {\r\n      let clearObject = api.skeletonObject.data[this.props.index];\r\n      console.log(clearObject)\r\n      let addStateToRedux = clone(this.props.dataApi);\r\n      addStateToRedux.data.push(clearObject);\r\n      this.props.setRedux({\r\n        addStateToRedux\r\n      });\r\n    }\r\n    render() {\r\n      return (\r\n        <div onClick={this.addingItem} className=\"button next_button button_add\" variant=\"contained\">\r\n          Добавить\r\n    </div>\r\n      )\r\n    }\r\n  }\r\nexport default api.connect(AddItem);","import React from 'react';\r\nimport api from '../api';\r\nimport DeleteItem from './deleteItem';\r\nimport AddItem from './addItem';\r\nclass Controllers extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"flex\">\r\n        <AddItem dataApi={this.props.dataApi} index={this.props.index} />\r\n        {this.props.dataApi.data[this.props.index].duplicate &&\r\n          <React.Fragment >\r\n            <DeleteItem dataApi={this.props.dataApi} newPath={this.props.index} />\r\n          </React.Fragment>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default api.connect(Controllers);","import React from 'react';\r\nimport preloaders from '../images/preloader.gif';\r\nimport api from '../api';\r\nimport Group from './group';\r\nimport Controllers from '../components/contollers';\r\nclass RenderPages extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoad: false,\r\n      indexes: []\r\n    }\r\n  }\r\n  changePage = (e) => {\r\n    let page = this.props.page;\r\n    e.target.classList.contains('back_button') ? (page -= 1) : (page += 1);\r\n    api.fetchData(page, () => { this.setState({ isLoad: true }) }).then((res) => {\r\n      this.props.setRedux({ apiPage: res });\r\n      this.setState({ isLoad: false });\r\n      this.props.setRedux({ page });\r\n    })\r\n  }\r\n  render() {\r\n    console.log(this.props)\r\n    return (\r\n      <React.Fragment>\r\n        {!this.state.isLoad &&\r\n          <div className=\"form_page flex_center\">\r\n            <h1 className=\"form__title\">Регистрация проектов</h1>\r\n            <div className=\"form_block\">\r\n              {this.props.apiPage.data.map((item, index) => {\r\n                if (item.type !== 'hidden') {\r\n                  return (\r\n                    <React.Fragment key={index + 'fragment'} >\r\n                      <Group path={[index]} key={index} indexGroup={index} data={item} />\r\n                      <Controllers  key={item} dataApi={this.props.apiPage} index={index} />\r\n                    </React.Fragment>\r\n                  )\r\n                }\r\n              })\r\n              }\r\n            </div>\r\n            {this.props.page === 0 &&\r\n              <div onClick={this.changePage} className=\"button next_button\" variant=\"contained\">\r\n                Далее\r\n            </div>\r\n            }\r\n            {this.props.page === 1 &&\r\n              <div className=\"flex mg_top_btns\">\r\n                <div onClick={this.changePage} className=\"button next_button\" variant=\"contained\">\r\n                  Далее\r\n                </div>\r\n                <div onClick={this.changePage} className=\"button left_btn_margin back_button \" variant=\"contained\">\r\n                  Назад\r\n                </div>\r\n              </div>\r\n            }\r\n            {this.props.page === 2 &&\r\n              <div onClick={this.changePage} className=\"button back_button\" variant=\"contained\">\r\n                Назад\r\n              </div>\r\n            }\r\n          </div>\r\n        }\r\n        {this.state.isLoad &&\r\n          <div className=\"flex wrapper_loader\">\r\n            <img src={preloaders} alt=\"preloader\" className=\"preloader\" />\r\n            {!this.props.apiPage.error &&\r\n              <>\r\n                <p className=\"preloader_text\">Загрузка</p>\r\n              </>}\r\n            {this.props.apiPage.error &&\r\n              <>\r\n                <p className=\"preloader_text\">Ошибка на сервере</p>\r\n                <p className=\"preloader_text\">{this.props.apiPage.error}</p>\r\n              </>\r\n            }\r\n          </div>\r\n        }\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default api.connect(RenderPages);\r\n","import React from 'react';\r\nimport RenderPage from './renderPage';\r\nimport preloaders from '../images/preloader.gif';\r\nimport api from '../api';\r\n\r\nclass Form extends React.Component {\r\n  componentDidMount() {\r\n    api.fetchData(this.props.page).then((res) => {\r\n      this.props.setRedux({ apiPage: res});\r\n    });\r\n  }\r\n  render() {\r\n    if (!this.props.apiPage.status) {\r\n      return (\r\n        <div className=\"wrapper\">\r\n          <div className=\"flex wrapper_loader\">\r\n            <img src={preloaders} alt=\"preloader\" className=\"preloader\" />\r\n            {!this.props.apiPage.error &&\r\n              <>\r\n                <p className=\"preloader_text\">Загрузка</p>\r\n              </>}\r\n            {this.props.apiPage.error &&\r\n              <>\r\n                <p className=\"preloader_text\">Ошибка на сервере</p>\r\n                <p className=\"preloader_text\">{this.props.apiPage.error}</p>\r\n              </>\r\n            }\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    else {\r\n      return (\r\n        <section className=\"form_page_wrapper full_screen flex_center\">\r\n          <RenderPage />\r\n        </section>\r\n      )\r\n    }\r\n  }\r\n}\r\nexport default api.connect(Form);\r\n","import React from 'react';\nimport './App.css';\nimport Form from './Page/form';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default (state = {}, newState = {}) => {\r\n  return Object.assign({}, state, newState);\r\n};","const initialState = {\r\n  page: 0,\r\n  apiPage: {\r\n    data: [],\r\n    resposneServer: false\r\n  },\r\n  empty: {},\r\n  fieldConfig: [],\r\n  fieldValues: [],\r\n  sizeGroup: [],\r\n  fieldGroup: [],\r\n  countForms: [],\r\n  sendData: '',\r\n  changeValue: ''\r\n}\r\n\r\nexport default initialState;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './App.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux'\r\nimport { createStore } from 'redux'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport reducers from './redux/reducers';\r\nimport devToolsEnhancer from 'remote-redux-devtools';\r\nimport initialState from './redux/initialState';\r\n\r\nconst store = createStore(reducers, initialState,  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/preloader.aebd064e.gif\";"],"sourceRoot":""}